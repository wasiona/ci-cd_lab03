pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out the code...'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project...'
                nodejs(nodeJSInstallationName: 'node') {
                    sh "chmod +x -R ${env.WORKSPACE}"
                    sh './scripts/build.sh'
                    sh 'npm run build'
                }
            }
        }

        stage('Test') {
            steps {
                echo 'Testing the project...'
                nodejs(nodeJSInstallationName: 'node') {
                    sh "chmod +x -R ${env.WORKSPACE}"
                    sh './scripts/test.sh'
                }
            }  
        }

 stage('Build and Push Docker Image') {
            steps {
                script {
                    def node = 'node' 
                    def branch = env.BRANCH_NAME 
                    def version = 'v1.0'
                    def appPort
                    def buildNumber = env.BUILD_NUMBER
                    def tagName = "teodoravucicevicepam/${node}-${buildNumber}"

                    if (branch == 'main') {
                        appPort = '3000'
                    } else if (branch == 'dev') {
                        appPort = '3001'
                    }

                    dockerImage = docker.build(tagName, "--build-arg APP_PORT=${appPort} .")
                    echo "Docker image ID: ${dockerImage.id}"

                    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                        dockerImage.push("${tagName}")
                    }
                }
            }
        }

stage('Deploy') {
            steps {
                script {
                    def node = 'node' 
                    def buildNumber = env.BUILD_NUMBER
                    def branch = env.BRANCH_NAME
                    def appPort

                    if (branch == 'main') {
                        appPort = '3000'
                    } else if (branch == 'dev') {
                        appPort = '3001'
                    }

                    sh "docker rm -f app-${branch} || true"
                    echo "Deploying the application on port ${appPort}..."
                    sh "docker run -d --name app-${branch} -p ${appPort}:${appPort} teodoravucicevicepam/node:${buildNumber}"
                }
            }
        }
    }
}