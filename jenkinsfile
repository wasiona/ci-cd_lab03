pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out the code...'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project...'
                nodejs(nodeJSInstallationName: 'node') {
                    sh "chmod +x -R ${env.WORKSPACE}"
                    sh './scripts/build.sh'
                    sh 'npm run build'
                }
            }
        }

        stage('Test') {
            steps {
                echo 'Testing the project...'
                nodejs(nodeJSInstallationName: 'node') {
                    sh "chmod +x -R ${env.WORKSPACE}"
                    sh './scripts/test.sh'
                }
            }  
        }

 stage('Build and Push Docker Image') {
    steps {
        script {
            def node = 'node' 
            def branch = env.BRANCH_NAME 
            def version = 'v1.0'
            def appPort
            def tagName = "${node}${branch}:${version}"

            if (branch == 'main') {
                appPort = '3000'
            } else if (branch == 'dev') {
                appPort = '3001'
            }

            dockerImage = docker.build("${teodoravucicevicepam}/${tagName}", "--build-arg APP_PORT=${appPort} .")
            echo "Docker image ID: ${dockerImage.id}"

            docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                dockerImage.push("${version}")
                dockerImage.push("latest")
            }
        }
    }
}


        stage('Deploy') {
            steps {
                script {
                    def node = 'node' 
                    def branch = env.BRANCH_NAME 
                    def version = 'v1.0'
                    def appPort
                    def projectName
                    def containerName
                    def tagPart = (branch == 'main') ? 'main' : 'dev'
                    def imageName ="${node}${tagPart}:${version}"

                    if (branch == 'main') {
                        appPort = '3000'
                        projectName = 'nodemain'
                        containerName = 'app-main'
                    } else if (branch == 'dev') {
                        appPort = '3001'
                        projectName = 'nodedev'
                        containerName = 'app-dev'
                    }

                    sh "docker rm -f ${containerName} || true"
                    sh "docker run -d --name ${containerName} -p ${appPort}:${appPort} ${imageName}"
                }
            }
        }
    } 
} 